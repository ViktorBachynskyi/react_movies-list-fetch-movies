{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movies.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","title","a","fetch","response","json","FindMovie","useState","movieTitle","setMovieTitle","setMovie","errorMessage","setErrorMessage","clear","loadFoundMovie","movieFromServer","onSubmit","event","preventDefault","addMovie","htmlFor","type","id","placeholder","autoComplete","value","onChange","target","onClick","App","setMovies","newMovie","every","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCffC,EAAU,8CAET,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,GAAJ,OAAcE,IADrC,cACCG,EADD,yBAGEA,EAASC,QAHX,4C,gCCQMC,EAA6B,SAACnB,GACzC,MAAoCoB,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcsB,EAAd,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAOMC,EAAQ,WACZJ,EAAc,KAGVK,EAAc,uCAAG,4BAAAZ,EAAA,sEACSF,EAASQ,GADlB,QACfO,EADe,QAGAtB,OAGnBiB,EAASK,GACTH,GAAgB,IAHhBA,GAAgB,GAJG,2CAAH,qDA6BpB,OACE,qCACE,uBAAMvB,UAAU,aAAa2B,SAZZ,SAACC,GACpBA,EAAMC,iBAEF9B,GACFD,EAAMgC,SAAS/B,GAGjByB,KAKE,UACE,sBAAKxB,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ+B,QAAQ,cAAjC,wBAEE,qBAAK/B,UAAU,UAAf,SACE,uBACEgC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZC,aAAa,MACbnC,UAAU,kBACVoC,MAAOjB,EACPkB,SApDO,SAACT,GACpBR,EAAcQ,EAAMU,OAAOF,OAC3Bb,GAAgB,WAsDTD,GACC,mBAAGtB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,kBACVuC,QAASd,EAHX,4BASF,qBAAKzB,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,oBACVuC,QA1DQ,WACdxC,GACFD,EAAMgC,SAAS/B,GAGjByB,KAkDQ,qCAWLzB,GACC,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WCnGfyC,EAAgB,WAC3B,MAA4BtB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAekC,EAAf,KAWA,OACE,sBAAKzC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAW8B,SAfA,SAACY,GACZnC,EAAOoC,OAAM,SAAA5C,GAAK,OAAIA,EAAMU,SAAWiC,EAASjC,WAClDgC,EAAU,GAAD,mBACJlC,GADI,CAEPmC,cCRRE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3403a1cf.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=33b66f3d&t=';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API_URL}${title}`);\n\n  return response.json();\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport { getMovie } from '../../api/movies';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const inputHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setMovieTitle(event.target.value);\n    setErrorMessage(false);\n  };\n\n  const clear = () => {\n    setMovieTitle('');\n  };\n\n  const loadFoundMovie = async () => {\n    const movieFromServer = await getMovie(movieTitle);\n\n    if (!movieFromServer.Title) {\n      setErrorMessage(true);\n    } else {\n      setMovie(movieFromServer);\n      setErrorMessage(false);\n    }\n  };\n\n  const addNewMovie = () => {\n    if (movie) {\n      props.addMovie(movie);\n    }\n\n    clear();\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie) {\n      props.addMovie(movie);\n    }\n\n    clear();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                autoComplete=\"off\"\n                className=\"input is-danger\"\n                value={movieTitle}\n                onChange={inputHandler}\n              />\n            </div>\n          </label>\n          {errorMessage && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadFoundMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbID !== newMovie.imdbID)) {\n      setMovies([\n        ...movies,\n        newMovie,\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}